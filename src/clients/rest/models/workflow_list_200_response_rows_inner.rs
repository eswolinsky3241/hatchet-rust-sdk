/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowList200ResponseRowsInner {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    /// The name of the workflow.
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the workflow.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Whether the workflow is paused.
    #[serde(rename = "isPaused", skip_serializing_if = "Option::is_none")]
    pub is_paused: Option<bool>,
    #[serde(rename = "versions", skip_serializing_if = "Option::is_none")]
    pub versions: Option<Vec<models::WorkflowList200ResponseRowsInnerVersionsInner>>,
    /// The tags of the workflow.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<models::WorkflowList200ResponseRowsInnerTagsInner>>,
    /// The jobs of the workflow.
    #[serde(rename = "jobs", skip_serializing_if = "Option::is_none")]
    pub jobs: Option<Vec<models::WorkflowList200ResponseRowsInnerJobsInner>>,
    /// The tenant id of the workflow.
    #[serde(rename = "tenantId")]
    pub tenant_id: String,
}

impl WorkflowList200ResponseRowsInner {
    pub fn new(metadata: models::V1TaskGet200ResponseMetadata, name: String, tenant_id: String) -> WorkflowList200ResponseRowsInner {
        WorkflowList200ResponseRowsInner {
            metadata: Box::new(metadata),
            name,
            description: None,
            is_paused: None,
            versions: None,
            tags: None,
            jobs: None,
            tenant_id,
        }
    }
}

