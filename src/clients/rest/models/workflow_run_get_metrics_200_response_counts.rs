/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowRunGetMetrics200ResponseCounts {
    #[serde(rename = "PENDING", skip_serializing_if = "Option::is_none")]
    pub pending: Option<i32>,
    #[serde(rename = "RUNNING", skip_serializing_if = "Option::is_none")]
    pub running: Option<i32>,
    #[serde(rename = "SUCCEEDED", skip_serializing_if = "Option::is_none")]
    pub succeeded: Option<i32>,
    #[serde(rename = "FAILED", skip_serializing_if = "Option::is_none")]
    pub failed: Option<i32>,
    #[serde(rename = "QUEUED", skip_serializing_if = "Option::is_none")]
    pub queued: Option<i32>,
    #[serde(rename = "CANCELLED", skip_serializing_if = "Option::is_none")]
    pub cancelled: Option<i32>,
}

impl WorkflowRunGetMetrics200ResponseCounts {
    pub fn new() -> WorkflowRunGetMetrics200ResponseCounts {
        WorkflowRunGetMetrics200ResponseCounts {
            pending: None,
            running: None,
            succeeded: None,
            failed: None,
            queued: None,
            cancelled: None,
        }
    }
}
