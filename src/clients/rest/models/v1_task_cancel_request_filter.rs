/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1TaskCancelRequestFilter {
    #[serde(rename = "since")]
    pub since: String,
    #[serde(rename = "until", skip_serializing_if = "Option::is_none")]
    pub until: Option<String>,
    #[serde(rename = "statuses", skip_serializing_if = "Option::is_none")]
    pub statuses: Option<Vec<Statuses>>,
    #[serde(rename = "workflowIds", skip_serializing_if = "Option::is_none")]
    pub workflow_ids: Option<Vec<uuid::Uuid>>,
    #[serde(rename = "additionalMetadata", skip_serializing_if = "Option::is_none")]
    pub additional_metadata: Option<Vec<String>>,
}

impl V1TaskCancelRequestFilter {
    pub fn new(since: String) -> V1TaskCancelRequestFilter {
        V1TaskCancelRequestFilter {
            since,
            until: None,
            statuses: None,
            workflow_ids: None,
            additional_metadata: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Statuses {
    #[serde(rename = "QUEUED")]
    Queued,
    #[serde(rename = "RUNNING")]
    Running,
    #[serde(rename = "COMPLETED")]
    Completed,
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "FAILED")]
    Failed,
}

impl Default for Statuses {
    fn default() -> Statuses {
        Self::Queued
    }
}
