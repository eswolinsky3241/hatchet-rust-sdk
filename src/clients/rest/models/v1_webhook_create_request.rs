/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum V1WebhookCreateRequest {
    V1WebhookCreateRequestOneOf(Box<models::V1WebhookCreateRequestOneOf>),
    V1WebhookCreateRequestOneOf1(Box<models::V1WebhookCreateRequestOneOf1>),
    V1WebhookCreateRequestOneOf2(Box<models::V1WebhookCreateRequestOneOf2>),
}

impl Default for V1WebhookCreateRequest {
    fn default() -> Self {
        Self::V1WebhookCreateRequestOneOf(Default::default())
    }
}
/// The name of the source for this webhook
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SourceName {
    #[serde(rename = "GENERIC")]
    Generic,
    #[serde(rename = "GITHUB")]
    Github,
    #[serde(rename = "STRIPE")]
    Stripe,
}

impl Default for SourceName {
    fn default() -> SourceName {
        Self::Generic
    }
}
/// The type of authentication to use for the webhook
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuthType {
    #[serde(rename = "HMAC")]
    Hmac,
}

impl Default for AuthType {
    fn default() -> AuthType {
        Self::Hmac
    }
}

