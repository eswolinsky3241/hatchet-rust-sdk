/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowRunCreate200ResponseJobRunsInnerWorkflowRunTriggeredBy {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    #[serde(rename = "parentWorkflowRunId", skip_serializing_if = "Option::is_none")]
    pub parent_workflow_run_id: Option<String>,
    #[serde(rename = "eventId", skip_serializing_if = "Option::is_none")]
    pub event_id: Option<String>,
    #[serde(rename = "cronParentId", skip_serializing_if = "Option::is_none")]
    pub cron_parent_id: Option<String>,
    #[serde(rename = "cronSchedule", skip_serializing_if = "Option::is_none")]
    pub cron_schedule: Option<String>,
}

impl WorkflowRunCreate200ResponseJobRunsInnerWorkflowRunTriggeredBy {
    pub fn new(metadata: models::V1TaskGet200ResponseMetadata) -> WorkflowRunCreate200ResponseJobRunsInnerWorkflowRunTriggeredBy {
        WorkflowRunCreate200ResponseJobRunsInnerWorkflowRunTriggeredBy {
            metadata: Box::new(metadata),
            parent_workflow_run_id: None,
            event_id: None,
            cron_parent_id: None,
            cron_schedule: None,
        }
    }
}

