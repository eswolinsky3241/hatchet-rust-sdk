/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetadataGet200Response {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Box<models::MetadataGet200ResponseAuth>>,
    /// the Pylon app ID for usepylon.com chat support
    #[serde(rename = "pylonAppId", skip_serializing_if = "Option::is_none")]
    pub pylon_app_id: Option<String>,
    #[serde(rename = "posthog", skip_serializing_if = "Option::is_none")]
    pub posthog: Option<Box<models::MetadataGet200ResponsePosthog>>,
    /// whether or not users can sign up for this instance
    #[serde(rename = "allowSignup", skip_serializing_if = "Option::is_none")]
    pub allow_signup: Option<bool>,
    /// whether or not users can invite other users to this instance
    #[serde(rename = "allowInvites", skip_serializing_if = "Option::is_none")]
    pub allow_invites: Option<bool>,
    /// whether or not users can create new tenants
    #[serde(rename = "allowCreateTenant", skip_serializing_if = "Option::is_none")]
    pub allow_create_tenant: Option<bool>,
    /// whether or not users can change their password
    #[serde(
        rename = "allowChangePassword",
        skip_serializing_if = "Option::is_none"
    )]
    pub allow_change_password: Option<bool>,
}

impl MetadataGet200Response {
    pub fn new() -> MetadataGet200Response {
        MetadataGet200Response {
            auth: None,
            pylon_app_id: None,
            posthog: None,
            allow_signup: None,
            allow_invites: None,
            allow_create_tenant: None,
            allow_change_password: None,
        }
    }
}
