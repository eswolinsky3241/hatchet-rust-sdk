/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1TaskEventList200ResponsePagination {
    /// the current page
    #[serde(rename = "current_page", skip_serializing_if = "Option::is_none")]
    pub current_page: Option<i64>,
    /// the next page
    #[serde(rename = "next_page", skip_serializing_if = "Option::is_none")]
    pub next_page: Option<i64>,
    /// the total number of pages for listing
    #[serde(rename = "num_pages", skip_serializing_if = "Option::is_none")]
    pub num_pages: Option<i64>,
}

impl V1TaskEventList200ResponsePagination {
    pub fn new() -> V1TaskEventList200ResponsePagination {
        V1TaskEventList200ResponsePagination {
            current_page: None,
            next_page: None,
            num_pages: None,
        }
    }
}
