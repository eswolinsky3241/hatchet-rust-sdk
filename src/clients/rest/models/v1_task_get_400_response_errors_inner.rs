/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1TaskGet400ResponseErrorsInner {
    /// a custom Hatchet error code
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    /// the field that this error is associated with, if applicable
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<String>,
    /// a description for this error
    #[serde(rename = "description")]
    pub description: String,
    /// a link to the documentation for this error, if it exists
    #[serde(rename = "docs_link", skip_serializing_if = "Option::is_none")]
    pub docs_link: Option<String>,
}

impl V1TaskGet400ResponseErrorsInner {
    pub fn new(description: String) -> V1TaskGet400ResponseErrorsInner {
        V1TaskGet400ResponseErrorsInner {
            code: None,
            field: None,
            description,
            docs_link: None,
        }
    }
}
