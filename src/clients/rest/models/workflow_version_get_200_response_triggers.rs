/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowVersionGet200ResponseTriggers {
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<models::V1TaskGet200ResponseMetadata>>,
    #[serde(rename = "workflow_version_id", skip_serializing_if = "Option::is_none")]
    pub workflow_version_id: Option<String>,
    #[serde(rename = "tenant_id", skip_serializing_if = "Option::is_none")]
    pub tenant_id: Option<String>,
    #[serde(rename = "events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<models::WorkflowVersionGet200ResponseTriggersEventsInner>>,
    #[serde(rename = "crons", skip_serializing_if = "Option::is_none")]
    pub crons: Option<Vec<models::WorkflowVersionGet200ResponseTriggersCronsInner>>,
}

impl WorkflowVersionGet200ResponseTriggers {
    pub fn new() -> WorkflowVersionGet200ResponseTriggers {
        WorkflowVersionGet200ResponseTriggers {
            metadata: None,
            workflow_version_id: None,
            tenant_id: None,
            events: None,
            crons: None,
        }
    }
}

