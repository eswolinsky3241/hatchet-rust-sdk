/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

/// EventList200ResponseRowsInnerWorkflowRunSummary : The workflow run summary for this event.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventList200ResponseRowsInnerWorkflowRunSummary {
    /// The number of pending runs.
    #[serde(rename = "pending", skip_serializing_if = "Option::is_none")]
    pub pending: Option<i64>,
    /// The number of running runs.
    #[serde(rename = "running", skip_serializing_if = "Option::is_none")]
    pub running: Option<i64>,
    /// The number of queued runs.
    #[serde(rename = "queued", skip_serializing_if = "Option::is_none")]
    pub queued: Option<i64>,
    /// The number of succeeded runs.
    #[serde(rename = "succeeded", skip_serializing_if = "Option::is_none")]
    pub succeeded: Option<i64>,
    /// The number of failed runs.
    #[serde(rename = "failed", skip_serializing_if = "Option::is_none")]
    pub failed: Option<i64>,
    /// The number of cancelled runs.
    #[serde(rename = "cancelled", skip_serializing_if = "Option::is_none")]
    pub cancelled: Option<i64>,
}

impl EventList200ResponseRowsInnerWorkflowRunSummary {
    /// The workflow run summary for this event.
    pub fn new() -> EventList200ResponseRowsInnerWorkflowRunSummary {
        EventList200ResponseRowsInnerWorkflowRunSummary {
            pending: None,
            running: None,
            queued: None,
            succeeded: None,
            failed: None,
            cancelled: None,
        }
    }
}

