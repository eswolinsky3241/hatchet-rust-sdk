/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantInviteCreateRequest {
    /// The email of the user to invite.
    #[serde(rename = "email")]
    pub email: String,
    /// The role of the user in the tenant.
    #[serde(rename = "role")]
    pub role: Role,
}

impl TenantInviteCreateRequest {
    pub fn new(email: String, role: Role) -> TenantInviteCreateRequest {
        TenantInviteCreateRequest { email, role }
    }
}
/// The role of the user in the tenant.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "OWNER")]
    Owner,
    #[serde(rename = "ADMIN")]
    Admin,
    #[serde(rename = "MEMBER")]
    Member,
}

impl Default for Role {
    fn default() -> Role {
        Self::Owner
    }
}
