/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1TaskListStatusMetrics200ResponseInner {
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "count")]
    pub count: i32,
}

impl V1TaskListStatusMetrics200ResponseInner {
    pub fn new(status: Status, count: i32) -> V1TaskListStatusMetrics200ResponseInner {
        V1TaskListStatusMetrics200ResponseInner {
            status,
            count,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "QUEUED")]
    Queued,
    #[serde(rename = "RUNNING")]
    Running,
    #[serde(rename = "COMPLETED")]
    Completed,
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "FAILED")]
    Failed,
}

impl Default for Status {
    fn default() -> Status {
        Self::Queued
    }
}

