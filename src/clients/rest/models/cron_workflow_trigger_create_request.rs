/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CronWorkflowTriggerCreateRequest {
    #[serde(rename = "input")]
    pub input: serde_json::Value,
    #[serde(rename = "additionalMetadata")]
    pub additional_metadata: serde_json::Value,
    #[serde(rename = "cronName")]
    pub cron_name: String,
    #[serde(rename = "cronExpression")]
    pub cron_expression: String,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
}

impl CronWorkflowTriggerCreateRequest {
    pub fn new(
        input: serde_json::Value,
        additional_metadata: serde_json::Value,
        cron_name: String,
        cron_expression: String,
    ) -> CronWorkflowTriggerCreateRequest {
        CronWorkflowTriggerCreateRequest {
            input,
            additional_metadata,
            cron_name,
            cron_expression,
            priority: None,
        }
    }
}
