/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SnsList200ResponseRowsInner {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    /// The unique identifier for the tenant that the SNS integration belongs to.
    #[serde(rename = "tenantId")]
    pub tenant_id: uuid::Uuid,
    /// The Amazon Resource Name (ARN) of the SNS topic.
    #[serde(rename = "topicArn")]
    pub topic_arn: String,
    /// The URL to send SNS messages to.
    #[serde(rename = "ingestUrl", skip_serializing_if = "Option::is_none")]
    pub ingest_url: Option<String>,
}

impl SnsList200ResponseRowsInner {
    pub fn new(metadata: models::V1TaskGet200ResponseMetadata, tenant_id: uuid::Uuid, topic_arn: String) -> SnsList200ResponseRowsInner {
        SnsList200ResponseRowsInner {
            metadata: Box::new(metadata),
            tenant_id,
            topic_arn,
            ingest_url: None,
        }
    }
}

