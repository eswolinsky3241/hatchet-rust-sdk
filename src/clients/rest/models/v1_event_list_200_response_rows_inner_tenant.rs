/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

/// V1EventList200ResponseRowsInnerTenant : The tenant associated with this event.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1EventList200ResponseRowsInnerTenant {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    /// The name of the tenant.
    #[serde(rename = "name")]
    pub name: String,
    /// The slug of the tenant.
    #[serde(rename = "slug")]
    pub slug: String,
    /// Whether the tenant has opted out of analytics.
    #[serde(rename = "analyticsOptOut", skip_serializing_if = "Option::is_none")]
    pub analytics_opt_out: Option<bool>,
    /// Whether to alert tenant members.
    #[serde(rename = "alertMemberEmails", skip_serializing_if = "Option::is_none")]
    pub alert_member_emails: Option<bool>,
    /// The version of the tenant.
    #[serde(rename = "version")]
    pub version: Version,
    /// The UI of the tenant.
    #[serde(rename = "uiVersion", skip_serializing_if = "Option::is_none")]
    pub ui_version: Option<UiVersion>,
}

impl V1EventList200ResponseRowsInnerTenant {
    /// The tenant associated with this event.
    pub fn new(
        metadata: models::V1TaskGet200ResponseMetadata,
        name: String,
        slug: String,
        version: Version,
    ) -> V1EventList200ResponseRowsInnerTenant {
        V1EventList200ResponseRowsInnerTenant {
            metadata: Box::new(metadata),
            name,
            slug,
            analytics_opt_out: None,
            alert_member_emails: None,
            version,
            ui_version: None,
        }
    }
}
/// The version of the tenant.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Version {
    #[serde(rename = "V0")]
    V0,
    #[serde(rename = "V1")]
    V1,
}

impl Default for Version {
    fn default() -> Version {
        Self::V0
    }
}
/// The UI of the tenant.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UiVersion {
    #[serde(rename = "V0")]
    V0,
    #[serde(rename = "V1")]
    V1,
}

impl Default for UiVersion {
    fn default() -> UiVersion {
        Self::V0
    }
}
