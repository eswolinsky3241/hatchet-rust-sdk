/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1TaskCancelRequest {
    /// A list of external IDs, which can refer to either task or workflow run external IDs
    #[serde(rename = "externalIds", skip_serializing_if = "Option::is_none")]
    pub external_ids: Option<Vec<uuid::Uuid>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::V1TaskCancelRequestFilter>>,
}

impl V1TaskCancelRequest {
    pub fn new() -> V1TaskCancelRequest {
        V1TaskCancelRequest {
            external_ids: None,
            filter: None,
        }
    }
}
