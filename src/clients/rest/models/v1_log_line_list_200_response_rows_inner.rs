/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1LogLineList200ResponseRowsInner {
    /// The creation date of the log line.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// The log message.
    #[serde(rename = "message")]
    pub message: String,
    /// The log metadata.
    #[serde(rename = "metadata")]
    pub metadata: serde_json::Value,
    /// The retry count of the log line.
    #[serde(rename = "retryCount", skip_serializing_if = "Option::is_none")]
    pub retry_count: Option<i32>,
    /// The attempt number of the log line.
    #[serde(rename = "attempt", skip_serializing_if = "Option::is_none")]
    pub attempt: Option<i32>,
    /// The log level.
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<Level>,
}

impl V1LogLineList200ResponseRowsInner {
    pub fn new(created_at: String, message: String, metadata: serde_json::Value) -> V1LogLineList200ResponseRowsInner {
        V1LogLineList200ResponseRowsInner {
            created_at,
            message,
            metadata,
            retry_count: None,
            attempt: None,
            level: None,
        }
    }
}
/// The log level.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Level {
    #[serde(rename = "DEBUG")]
    Debug,
    #[serde(rename = "INFO")]
    Info,
    #[serde(rename = "WARN")]
    Warn,
    #[serde(rename = "ERROR")]
    Error,
}

impl Default for Level {
    fn default() -> Level {
        Self::Debug
    }
}

