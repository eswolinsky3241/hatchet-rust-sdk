/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1WorkflowRunCreate200ResponseShapeInner {
    #[serde(rename = "taskExternalId")]
    pub task_external_id: uuid::Uuid,
    #[serde(rename = "stepId")]
    pub step_id: uuid::Uuid,
    #[serde(rename = "childrenStepIds")]
    pub children_step_ids: Vec<uuid::Uuid>,
    #[serde(rename = "taskName")]
    pub task_name: String,
}

impl V1WorkflowRunCreate200ResponseShapeInner {
    pub fn new(
        task_external_id: uuid::Uuid,
        step_id: uuid::Uuid,
        children_step_ids: Vec<uuid::Uuid>,
        task_name: String,
    ) -> V1WorkflowRunCreate200ResponseShapeInner {
        V1WorkflowRunCreate200ResponseShapeInner {
            task_external_id,
            step_id,
            children_step_ids,
            task_name,
        }
    }
}
