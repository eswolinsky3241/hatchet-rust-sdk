/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantGetQueueMetrics200Response {
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<Box<models::TenantGetQueueMetrics200ResponseTotal>>,
    #[serde(rename = "workflow", skip_serializing_if = "Option::is_none")]
    pub workflow: Option<
        std::collections::HashMap<String, models::TenantGetQueueMetrics200ResponseWorkflowValue>,
    >,
    #[serde(rename = "queues", skip_serializing_if = "Option::is_none")]
    pub queues: Option<std::collections::HashMap<String, i32>>,
}

impl TenantGetQueueMetrics200Response {
    pub fn new() -> TenantGetQueueMetrics200Response {
        TenantGetQueueMetrics200Response {
            total: None,
            workflow: None,
            queues: None,
        }
    }
}
