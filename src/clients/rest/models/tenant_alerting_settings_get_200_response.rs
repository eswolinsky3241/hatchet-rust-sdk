/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantAlertingSettingsGet200Response {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    /// Whether to alert tenant members.
    #[serde(rename = "alertMemberEmails", skip_serializing_if = "Option::is_none")]
    pub alert_member_emails: Option<bool>,
    /// Whether to send alerts when workflow runs fail.
    #[serde(rename = "enableWorkflowRunFailureAlerts", skip_serializing_if = "Option::is_none")]
    pub enable_workflow_run_failure_alerts: Option<bool>,
    /// Whether to enable alerts when tokens are approaching expiration.
    #[serde(rename = "enableExpiringTokenAlerts", skip_serializing_if = "Option::is_none")]
    pub enable_expiring_token_alerts: Option<bool>,
    /// Whether to enable alerts when tenant resources are approaching limits.
    #[serde(rename = "enableTenantResourceLimitAlerts", skip_serializing_if = "Option::is_none")]
    pub enable_tenant_resource_limit_alerts: Option<bool>,
    /// The max frequency at which to alert.
    #[serde(rename = "maxAlertingFrequency")]
    pub max_alerting_frequency: String,
    /// The last time an alert was sent.
    #[serde(rename = "lastAlertedAt", skip_serializing_if = "Option::is_none")]
    pub last_alerted_at: Option<String>,
}

impl TenantAlertingSettingsGet200Response {
    pub fn new(metadata: models::V1TaskGet200ResponseMetadata, max_alerting_frequency: String) -> TenantAlertingSettingsGet200Response {
        TenantAlertingSettingsGet200Response {
            metadata: Box::new(metadata),
            alert_member_emails: None,
            enable_workflow_run_failure_alerts: None,
            enable_expiring_token_alerts: None,
            enable_tenant_resource_limit_alerts: None,
            max_alerting_frequency,
            last_alerted_at: None,
        }
    }
}

