/*
 * Hatchet API
 *
 * The Hatchet API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::clients::rest::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantMembershipsList200ResponseRowsInner {
    #[serde(rename = "metadata")]
    pub metadata: Box<models::V1TaskGet200ResponseMetadata>,
    #[serde(rename = "user")]
    pub user: Box<models::TenantMembershipsList200ResponseRowsInnerUser>,
    /// The role of the user in the tenant.
    #[serde(rename = "role")]
    pub role: Role,
    #[serde(rename = "tenant", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<Box<models::TenantMembershipsList200ResponseRowsInnerTenant>>,
}

impl TenantMembershipsList200ResponseRowsInner {
    pub fn new(metadata: models::V1TaskGet200ResponseMetadata, user: models::TenantMembershipsList200ResponseRowsInnerUser, role: Role) -> TenantMembershipsList200ResponseRowsInner {
        TenantMembershipsList200ResponseRowsInner {
            metadata: Box::new(metadata),
            user: Box::new(user),
            role,
            tenant: None,
        }
    }
}
/// The role of the user in the tenant.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "OWNER")]
    Owner,
    #[serde(rename = "ADMIN")]
    Admin,
    #[serde(rename = "MEMBER")]
    Member,
}

impl Default for Role {
    fn default() -> Role {
        Self::Owner
    }
}

